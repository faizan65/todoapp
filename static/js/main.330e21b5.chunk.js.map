{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","savedTodos","localStorage","getItem","JSON","parse","todos","setTodos","todo","setTodo","isEditing","setIsEditing","currentTodo","setCurrentTodo","useEffect","setItem","stringify","class","onSubmit","e","preventDefault","id","updatedTodo","updatedItem","map","handleUpdateTodo","name","type","placeholder","value","text","onChange","target","console","log","style","height","width","paddingLeft","fontFamily","borderRadius","border","marginTop","className","marginLeft","color","onClick","length","trim","listStyle","magin","Badge","marginRight","backgroundColor","removeItem","filter","handleDeleteClick","float","handleEditClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.330e21b5.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport { Badge } from \"react-bootstrap\";\n\n\nexport default function App() {\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    if (savedTodos) {\n      return JSON.parse(savedTodos);\n    } else {\n      return [];\n    }\n  });\n  const [todo, setTodo] = useState(\"\");\n\n  const [isEditing, setIsEditing] = useState(false);\n  \n  const [currentTodo, setCurrentTodo] = useState({});\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  function handleInputChange(e) {\n    setTodo(e.target.value);\n  }\n\n  \n  function handleEditInputChange(e) {\n   \n    setCurrentTodo({ ...currentTodo, text: e.target.value });\n    console.log(currentTodo);\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n\n    if (todo !== \"\") {\n      setTodos([\n        ...todos,\n        {\n          id: todos.length + 1,\n          text: todo.trim()\n        }\n      ]);\n    }\n\n    setTodo(\"\");\n  }\n\n  function handleEditFormSubmit(e) {\n    e.preventDefault();\n\n    handleUpdateTodo(currentTodo.id, currentTodo);\n  }\n\n  function handleDeleteClick(id) {\n    const removeItem = todos.filter((todo) => {\n      return todo.id !== id;\n    });\n    setTodos(removeItem);\n  }\n\n  \n  function handleUpdateTodo(id, updatedTodo) {\n    \n    const updatedItem = todos.map((todo) => {\n      return todo.id === id ? updatedTodo : todo;\n    });\n    \n    setIsEditing(false);\n   \n    setTodos(updatedItem);\n  }\n\n  \n  function handleEditClick(todo) {\n   \n    setIsEditing(true);\n    \n    setCurrentTodo({ ...todo });\n  }\n\n  return (\n    <>\n       <section class=\"vh-100 gradient-custom\">\n  <div class=\"container py-5 h-100\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col col-xl-10\">\n\n        <div class=\"card\">\n          <div class=\"card-body p-5\">\n\n          {isEditing ? (\n                            \n                            <form onSubmit={handleEditFormSubmit}>\n                              \n                              <h2>Edit Todo</h2>\n                              \n                              \n                            \n                              <input\n                                name=\"editTodo\"\n                                type=\"text\"\n                                placeholder=\"Edit todo\"\n                                value={currentTodo.text}\n                                onChange={handleEditInputChange}\n                                style = {{ height: \"42px\", width: \"360px\", paddingLeft: \"10px\", fontFamily: \"monospace\",\n                                 borderRadius: \"10px\", border: \"1px solid #dbb13d\", marginTop:\"5px\"}}\n                              />\n                            \n                              <button type=\"submit\" className=\"btn btn-warning\" style = {{marginLeft:\"10px\", height: \"45px\", color: \"black\"}}>Update</button>\n                              \n                              <button onClick={() => setIsEditing(false)} className=\"btn btn-warning\" style = {{marginLeft:\"10px\", height: \"45px\", color: \"black\"}}>Cancel</button>\n                            </form>\n                          ) : (\n                          \n                            <form onSubmit={handleFormSubmit}>\n                              \n                              <h2 style = {{fontFamily: \"monospace\"}}>Add Todo</h2>\n                            \n                              \n                              \n                              <input\n                                name=\"todo\"\n                                type=\"text\"\n                                placeholder=\"Create a new todo\"\n                                value={todo}\n                                onChange={handleInputChange}\n                                style = {{ height: \"42px\", width: \"360px\", paddingLeft: \"10px\", fontFamily: \"monospace\",\n                                 borderRadius: \"10px\", border: \"1px solid #dbb13d\", marginTop:\"5px\"}}\n                                \n                              />\n                            \n                              <button type=\"submit\" className=\"btn btn-warning\" style = {{marginLeft:\"10px\", height: \"45px\",}}>Add</button>\n                            </form>\n                          )}\n\n \n      \n     \n            <ul className=\"todo-list\">\n               {todos.map((todo) => (\n                 <li key={todo.id} style = {{listStyle: \"none\", magin: \"0\"}} className = \"p-2\">\n                 <Badge style = {{marginRight: \"10px\", backgroundColor: \"black\",}}>{todo.id}</Badge>\n                 {todo.text}\n                                  \n                  <button onClick={() => handleDeleteClick(todo.id)} style = {{ float: \"right\", marginLeft:\"5px\"}} className=\"btn btn-danger\">Delete</button>\n                  <button onClick={() => handleEditClick(todo)} style = {{ float: \"right\"}} className=\"btn btn-primary\">Edit</button>\n                                    \n                   </li>\n                  ))}\n             </ul>\n         \n\n           \n           \n              \n              \n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n  \n</section> \n                            \n\n                        \n\n\n    </>\n\n\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}